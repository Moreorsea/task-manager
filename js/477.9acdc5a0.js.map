{"version":3,"file":"js/477.9acdc5a0.js","mappings":"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","sources":["webpack://task-manager/./src/composables/useDateOfRange.ts","webpack://task-manager/./node_modules/@kurkle/color/dist/color.esm.js","webpack://task-manager/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://task-manager/./node_modules/chart.js/dist/chart.js","webpack://task-manager/./node_modules/vue-chartjs/dist/index.js","webpack://task-manager/./src/composables/usePieChartData.ts","webpack://task-manager/./src/components/Statistic/PieChart.vue?4d53","webpack://task-manager/./src/components/Statistic/PieChart.vue","webpack://task-manager/./src/components/Statistic/PieChart.vue?7ecb","webpack://task-manager/./src/composables/useBarChartData.ts","webpack://task-manager/./src/components/Statistic/BarChart.vue?fbbc","webpack://task-manager/./src/components/Statistic/BarChart.vue","webpack://task-manager/./src/components/Statistic/BarChart.vue?05f2","webpack://task-manager/./src/views/StatisticsView.vue?cac8","webpack://task-manager/./src/views/StatisticsView.vue","webpack://task-manager/./src/views/StatisticsView.vue?b643"],"sourcesContent":["import { dateToTimestamp } from '@/utils/utils';\nimport dayjs from 'dayjs';\nimport { onMounted, ref, watch } from 'vue';\n\nconst millisecondsInDay = 24 * 60 * 60 * 1000;\n\nexport const useDateOfRange = () => {\n  const startDate = dayjs().subtract(1, 'week').toDate();\n  const endDate = new Date();\n  const dateRange = ref<Date[] | string>([startDate, endDate]);\n  const daysOfRange = ref({});\n\n  const config = ref({\n    mode: 'range',\n    defaultDate: [startDate, endDate],\n    dateFormat: 'd.m.Y',\n  });\n\n  const createDaysOfRange = () => {\n    const dates = typeof dateRange.value === 'string' ? dateRange.value.split(' to ') : dateRange.value.map((date) => dayjs(date).format('DD.MM.YYYY'));\n\n    const startDate = dateToTimestamp(dates[0]);\n    const newRange: Record<string, number> = {};\n\n    for (let i = 0; i < 7; i++) {\n      newRange[i === 0 ? startDate : startDate + i * millisecondsInDay] = 0;\n    }\n\n    daysOfRange.value = newRange;\n  };\n\n  watch(\n    dateRange,\n    () => {\n      createDaysOfRange();\n    },\n    { deep: true },\n  );\n\n  onMounted(() => {\n    createDaysOfRange();\n  });\n\n  const handleChange = (selectedDates: Date[]) => {\n    if (selectedDates.length === 2 && selectedDates[0].getTime() === isValidDate(dateRange.value[0]) && selectedDates[1]?.getTime() === isValidDate(dateRange.value[1])) return;\n\n    if (selectedDates.length === 1) {\n      dateRange.value = [selectedDates[0], dayjs(selectedDates[0]).add(1, 'week').toDate()];\n      return;\n    }\n\n    dateRange.value = selectedDates;\n  };\n\n  const isValidDate = (date: Date | string) => {\n    if (date instanceof Date) {\n      return date.getTime();\n    }\n\n    return date;\n  };\n\n  return {\n    config,\n    handleChange,\n    dateRange,\n    daysOfRange,\n  };\n};\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { ITask } from '@/types/interfaces';\nimport { computed, Ref } from 'vue';\nimport { Colors } from '@/types/enums';\n\nexport const usePieChartData = (tasks: Ref<ITask[]>) => {\n  const emptyColorObject = {\n    [Colors.black]: 0,\n    [Colors.yellow]: 0,\n    [Colors.blue]: 0,\n    [Colors.green]: 0,\n    [Colors.pink]: 0,\n  };\n\n  const colorTasks = computed(() =>\n    (tasks.value || []).reduce(\n      (sum: Record<string, number>, task: ITask) => {\n        sum[task.color] += 1;\n\n        return sum;\n      },\n      { ...emptyColorObject },\n    ),\n  );\n\n  const chartData = computed(() => ({\n    labels: ['Черный', 'Жёлтый', 'Синий', 'Зелёный', 'Розовый'],\n    datasets: [\n      {\n        data: Object.values(colorTasks.value),\n        backgroundColor: ['#0a0a0a', '#ffe125', '#0c5cdd', '#31b55c', '#ff3cb9'],\n        hoverOffset: 4,\n      },\n    ],\n  }));\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Соотношение всех задач по цветам',\n      },\n    },\n  };\n\n  return {\n    chartData,\n    chartOptions,\n  };\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement, PieController } from 'chart.js';\nimport { usePieChartData } from '@/composables/usePieChartData';\nimport { toRef, Ref } from 'vue';\nimport { ITask } from '@/types/interfaces';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PieChart',\n  props: {\n    tasks: {}\n  },\n  setup(__props: any) {\n\nChartJS.register(Title, Tooltip, Legend, ArcElement, PieController);\n\nconst props = __props;\n\nconst tasksRef: Ref<ITask[]> = toRef(props, 'tasks');\n\nconst { chartData, chartOptions } = usePieChartData(tasksRef);\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(Pie), {\n    data: _unref(chartData),\n    options: _unref(chartOptions),\n    width: 350,\n    height: 350\n  }, null, 8, [\"data\", \"options\"]))\n}\n}\n\n})","<template>\n  <Pie :data=\"chartData\" :options=\"chartOptions\" :width=\"350\" :height=\"350\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement, PieController } from 'chart.js';\nimport { usePieChartData } from '@/composables/usePieChartData';\nimport { toRef, Ref } from 'vue';\nimport { ITask } from '@/types/interfaces';\n\nChartJS.register(Title, Tooltip, Legend, ArcElement, PieController);\n\nconst props = defineProps<{\n  tasks: ITask[];\n}>();\n\nconst tasksRef: Ref<ITask[]> = toRef(props, 'tasks');\n\nconst { chartData, chartOptions } = usePieChartData(tasksRef);\n</script>\n","import script from \"./PieChart.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PieChart.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { watch, Ref, computed, ref } from 'vue';\nimport { ITask } from '@/types/interfaces';\nimport { isDateBetween, timestampToDate } from '@/utils/utils';\n\nexport const useBarChartData = (tasks: Ref<ITask[]>, startDate: Ref<Date>, endDate: Ref<Date>, daysOfRange: Ref<Record<string, number>>) => {\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        ticks: {\n          stepSize: 1,\n          precision: 0,\n        },\n      },\n    },\n  };\n  const filteredTasks = ref<Record<number, number>>({});\n\n  const getFilteredTasks = () => {\n    const newTasks: Record<string, number> = { ...daysOfRange.value };\n    tasks.value.forEach((task) => {\n      if (!task.due_date) return;\n\n      if (isDateBetween(task.due_date, startDate.value, endDate.value) && task.due_date in newTasks) {\n        newTasks[task.due_date] += 1;\n      }\n    });\n\n    filteredTasks.value = newTasks;\n  };\n\n  watch([tasks, startDate, endDate, daysOfRange], getFilteredTasks, { deep: true, immediate: true });\n\n  const data = computed(() => ({\n    labels: Object.keys(filteredTasks.value || {}).map((item) => timestampToDate(Number(item))),\n    datasets: [\n      {\n        label: 'График задач за выбранный период',\n        backgroundColor: '#f87979',\n        data: Object.values(filteredTasks.value || {}),\n        barPercentage: 1,\n      },\n    ],\n  }));\n\n  return {\n    chartOptions,\n    data,\n  };\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { ref, toRef, Ref, toRefs } from 'vue';\nimport { ITask } from '@/types/interfaces';\nimport { useBarChartData } from '@/composables/useBarChartData';\nimport { WEEK_IN_MILLISECONDS } from '@/constants/form';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BarChart',\n  props: {\n    dates: {},\n    daysOfRange: {},\n    dateRange: {},\n    tasks: {}\n  },\n  setup(__props: any) {\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst props = __props;\n\nconst startDate = ref(new Date().getTime());\nconst endDate = ref(new Date(Date.now() - WEEK_IN_MILLISECONDS).getTime());\n\nconst tasksRef: Ref<ITask[]> = toRef(props, 'tasks');\nconst daysOfRangeRef: Ref<Record<string, number>> = toRef(props, 'daysOfRange');\n\nconst { chartOptions, data } = toRefs(useBarChartData(tasksRef, startDate, endDate, daysOfRangeRef));\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(Bar), {\n    id: \"my-chart-id\",\n    options: _unref(chartOptions),\n    data: _unref(data)\n  }, null, 8, [\"options\", \"data\"]))\n}\n}\n\n})","<template>\n  <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"data\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { ref, toRef, Ref, toRefs } from 'vue';\nimport { ITask } from '@/types/interfaces';\nimport { useBarChartData } from '@/composables/useBarChartData';\nimport { WEEK_IN_MILLISECONDS } from '@/constants/form';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst props = defineProps<{\n  dates: Record<string, number>;\n  daysOfRange: Record<string, number>;\n  dateRange: Date[];\n  tasks: ITask[];\n}>();\n\nconst startDate = ref(new Date().getTime());\nconst endDate = ref(new Date(Date.now() - WEEK_IN_MILLISECONDS).getTime());\n\nconst tasksRef: Ref<ITask[]> = toRef(props, 'tasks');\nconst daysOfRangeRef: Ref<Record<string, number>> = toRef(props, 'daysOfRange');\n\nconst { chartOptions, data } = toRefs(useBarChartData(tasksRef, startDate, endDate, daysOfRangeRef));\n</script>\n","import script from \"./BarChart.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BarChart.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, isRef as _isRef, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"statistic container\" }\nconst _hoisted_2 = { class: \"statistic__line\" }\nconst _hoisted_3 = { class: \"statistic__period\" }\nconst _hoisted_4 = { class: \"statistic-input-wrap\" }\nconst _hoisted_5 = { class: \"statistic__circle\" }\nconst _hoisted_6 = { class: \"statistic__colors-wrap\" }\nconst _hoisted_7 = { class: \"statistic__line-graphic\" }\n\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport { onBeforeMount } from 'vue';\n\nimport { useTasksStore } from '@/stores/tasks';\nimport { storeToRefs } from 'pinia';\nimport { useDateOfRange } from '@/composables/useDateOfRange';\nimport PieChart from '../components/Statistic/PieChart.vue';\nimport BarChart from '../components/Statistic/BarChart.vue';\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'StatisticsView',\n  setup(__props) {\n\nconst tasksStore = useTasksStore();\nconst { tasks } = storeToRefs(tasksStore);\n\nconst { config, handleChange, dateRange, daysOfRange } = useDateOfRange();\n\nonBeforeMount(() => {\n  if (tasks.value.length === 0) tasksStore.fetchTasks();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"section\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[1] || (_cache[1] = _createElementVNode(\"h2\", { class: \"statistic__period-title\" }, \"Task Activity DIAGRAM\", -1)),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createVNode(_unref(flatPickr), {\n            modelValue: _unref(dateRange),\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(dateRange) ? (dateRange).value = $event : null)),\n            config: _unref(config),\n            onOnChange: _unref(handleChange)\n          }, null, 8, [\"modelValue\", \"config\", \"onOnChange\"])\n        ]),\n        _cache[2] || (_cache[2] = _createElementVNode(\"p\", { class: \"statistic__period-result\" }, [\n          _createTextVNode(\" In total for the specified period \"),\n          _createElementVNode(\"span\", { class: \"statistic__task-found\" }, \"0\"),\n          _createTextVNode(\" tasks were fulfilled. \")\n        ], -1))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createVNode(PieChart, { tasks: _unref(tasks) }, null, 8, [\"tasks\"])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      _createVNode(BarChart, {\n        \"date-range\": _unref(dateRange),\n        tasks: _unref(tasks),\n        \"days-of-range\": _unref(daysOfRange)\n      }, null, 8, [\"date-range\", \"tasks\", \"days-of-range\"])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <section class=\"statistic container\">\n    <div class=\"statistic__line\">\n      <div class=\"statistic__period\">\n        <h2 class=\"statistic__period-title\">Task Activity DIAGRAM</h2>\n\n        <div class=\"statistic-input-wrap\">\n          <flat-pickr v-model=\"dateRange\" :config=\"config\" @on-change=\"handleChange\" />\n        </div>\n\n        <p class=\"statistic__period-result\">\n          In total for the specified period\n          <span class=\"statistic__task-found\">0</span> tasks were fulfilled.\n        </p>\n      </div>\n      <div class=\"statistic__circle\">\n        <div class=\"statistic__colors-wrap\">\n          <pie-chart :tasks=\"tasks\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"statistic__line-graphic\">\n      <bar-chart :date-range=\"dateRange\" :tasks=\"tasks\" :days-of-range=\"daysOfRange\" />\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport { onBeforeMount } from 'vue';\n\nimport { useTasksStore } from '@/stores/tasks';\nimport { storeToRefs } from 'pinia';\nimport { useDateOfRange } from '@/composables/useDateOfRange';\nimport PieChart from '../components/Statistic/PieChart.vue';\nimport BarChart from '../components/Statistic/BarChart.vue';\n\nconst tasksStore = useTasksStore();\nconst { tasks } = storeToRefs(tasksStore);\n\nconst { config, handleChange, dateRange, daysOfRange } = useDateOfRange();\n\nonBeforeMount(() => {\n  if (tasks.value.length === 0) tasksStore.fetchTasks();\n});\n</script>\n\n<style lang=\"less\">\n@import '../style/variables.less';\n\n.flatpickr-input {\n  font-family: 'HelveticaNeueCyr';\n  padding: 5px;\n  width: 155px;\n}\n\n.statistic {\n  padding-top: 50px;\n  padding-bottom: 50px;\n\n  &__line {\n    display: flex;\n    padding-bottom: 20px;\n\n    &-graphic {\n      margin-top: 30px;\n    }\n  }\n\n  &__period {\n    width: 330px;\n    margin-right: 80px;\n    font-size: 14px;\n    font-weight: 500;\n\n    &-result {\n      font-size: 14px;\n      font-weight: 500;\n    }\n\n    &-title {\n      margin-top: 0;\n      font-size: 18px;\n      text-transform: uppercase;\n    }\n\n    &-input {\n      padding: 8px 0 4px 20px;\n      margin: 0;\n      border: 1px solid @black;\n      font-size: 14px;\n      width: 100%;\n      color: @black;\n    }\n  }\n\n  &-input-wrap {\n    display: flex;\n    width: 100%;\n  }\n\n  &__circle {\n    display: flex;\n    justify-content: space-between;\n  }\n}\n</style>\n","import script from \"./StatisticsView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./StatisticsView.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./StatisticsView.vue?vue&type=style&index=0&id=9be34ee8&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["millisecondsInDay","useDateOfRange","startDate","subtract","toDate","endDate","Date","dateRange","daysOfRange","config","mode","defaultDate","dateFormat","createDaysOfRange","dates","value","split","map","date","format","newRange","i","deep","handleChange","selectedDates","length","getTime","isValidDate","add","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","getSizeForArea","chartArea","field","getDatasetArea","meta","xScale","yScale","getDatasetClipArea","_clip","disabled","Animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","initial","currentStep","_refresh","_update","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iScale","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PieController","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","spanGaps","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","role","ref","createTypedChart","registerables","reforwardRef","Bar","Pie","usePieChartData","tasks","emptyColorObject","yellow","blue","green","pink","colorTasks","sum","task","chartData","chartOptions","__name","__props","tasksRef","__exports__","useBarChartData","filteredTasks","getFilteredTasks","newTasks","due_date","immediate","daysOfRangeRef","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","tasksStore","fetchTasks","modelValue","$event","onOnChange","PieChart","BarChart"],"sourceRoot":""}